
<%@page import="maps.Objet"%>
<%@page import="module.ModelBean"%>
<%@page import="java.util.List"%>
<%@page import="maps.ObjetType"%>
<%@page import="maps.Doctype"%>
<%@page import="maps.Structure"%>
<%@page import="maps.StructureDetails"%>
<%@page import="maps.Document"%>
<%@page import="maps.ModeReglement"%>
<%@page import="maps.ModeLivraison"%>
<%@page import="maps.TypeAttachment"%>
<%@page import="maps.Structure"%>
<%
    Structure structure = (Structure) session.getAttribute("Structure");
%>
<script>
    var substringMatcher = function (strs) {
        return function findMatches(q, cb) {
            var matches, substringRegex;

            // an array that will be populated with substring matches
            matches = [];

            // regex used to determine if a string contains the substring `q`
            substrRegex = new RegExp(q, 'i');

            // iterate through the pool of strings and for any string that
            // contains the substring `q`, add it to the `matches` array
            $.each(strs, function (i, str) {
                if (substrRegex.test(str)) {
                    matches.push(str);
                }
            });

            cb(matches);
        };
    };

    var type = new Array();
            type = [<%
            List<ObjetType> lobjett = ((List<ObjetType>) ModelBean.GetContentTable("ObjetType", "where isdeleted=0 "));
            for (int idx = 0; idx < lobjett.size(); idx++) { ObjetType elem = lobjett.get(idx);%>"<%=elem.getNomObjetType()%>",<%}%>];
    var product = new Array();
            product = [<%
            List<Objet> lobjet = ((List<Objet>) ModelBean.GetContentTable("Objet", "where isdeleted=0 "));
            for (int idx = 0; idx < lobjet.size(); idx++) { Objet elem = lobjet.get(idx);%>"<%=elem.getNomObjet()%>",<%}%>];
    var modeL = new Array();
            modeL = [<%
            List<ModeLivraison> lmodel = ((List<ModeLivraison>) ModelBean.GetContentTable("ModeLivraison", "where isdeleted=0"));
            for (int idx = 0; idx < lmodel.size(); idx++) { ModeLivraison elem = lmodel.get(idx);%>"<%= elem.getNomMode() %>",<%}%>];

    var modeR = new Array();
            modeR = [<%
            List<ModeReglement> lmoder = ((List<ModeReglement>) ModelBean.GetContentTable("ModeReglement", "where isdeleted=0"));
            for (int idx = 0; idx < lmoder.size(); idx++) { ModeReglement elem = lmoder.get(idx);%>"<%= elem.getNomMode() %>",<%}%>];




    var typeattav1 = new Array();
            typeattav1 = [<%      
            List<TypeAttachment> tattav1 = ((List<TypeAttachment>) ModelBean.GetContentTable("TypeAttachment", "where isdeleted=0 and typeAttachment<>'Confirmation' and situationAttachment<>'Locale' and idStructure="+structure.getIdStructure()));
            for (int idx = 0; idx < tattav1.size(); idx++) { TypeAttachment elem = tattav1.get(idx);%>"<%= elem.getNomAttachment() %>",<%}%>];
    $('#the-basics .typeahead51').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(typeattav1)
    });




    var typeattav2 = new Array();
            typeattav2 = [<%      
            List<TypeAttachment> tattav = ((List<TypeAttachment>) ModelBean.GetContentTable("TypeAttachment", "where isdeleted=0 and typeAttachment<>'Confirmation' and situationAttachment<>'Externe' and idStructure="+structure.getIdStructure()));
            for (int idx = 0; idx < tattav.size(); idx++) { TypeAttachment elem = tattav.get(idx);%>"<%= elem.getNomAttachment() %>",<%}%>];

    $('#the-basics .typeahead52').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(typeattav2)
    });





    var typeattap1 = new Array();
            typeattap1 = [<%
            List<TypeAttachment> tattap = ((List<TypeAttachment>) ModelBean.GetContentTable("TypeAttachment", "where isdeleted=0 and typeAttachment<>'Creation' and situationAttachment<>'Locale' and idStructure="+structure.getIdStructure()));
            for (int idx = 0; idx < tattap.size(); idx++) { TypeAttachment elem = tattap.get(idx);%>"<%= elem.getNomAttachment() %>",<%}%>];
    $('#the-basics .typeahead61').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(typeattap1)
    });


    var typeattap2 = new Array();
            typeattap2 = [<%
            List<TypeAttachment> tattap1 = ((List<TypeAttachment>) ModelBean.GetContentTable("TypeAttachment", "where isdeleted=0 and typeAttachment<>'Creation' and situationAttachment<>'Externe' and idStructure="+structure.getIdStructure()));
            for (int idx = 0; idx < tattap1.size(); idx++) { TypeAttachment elem = tattap1.get(idx);%>"<%= elem.getNomAttachment() %>",<%}%>];

    $('#the-basics .typeahead62').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(typeattap2)
    });

//-----------------------------------------------------------------//
    $('span.twitter-typeahead').css("display", "block");

    $

    /*$('.list__ul0 a').on('click', function (ev) {
     ev.preventDefault();
     var index = $(this).parent().index();
     
     if ($('.list__ul0 a').html() == "Locale") {
     $('.typeahead52').css("display", "block");
     $('.typeahead51').css("display", "none");
     }
     if ($('.list__ul0 a').html() == "Externe") {
     $('.typeahead52').css("display", "none");
     $('.typeahead51').css("display", "block");
     }
     
     });
     
     $('.list__ul2 a').on('click', function (ev) {
     ev.preventDefault();
     var index = $(this).parent().index();
     
     if ($('.list__ul2 a').html() == "Locale") {
     $('.typeahead62').css("display", "block");
     $('.typeahead61').css("display", "none");
     }
     if ($('.list__ul2 a').html() == "Externe") {
     $('.typeahead62').css("display", "none");
     $('.typeahead61').css("display", "block");
     }
     
     });
    */
    var docs = new Array();
    <%
        List<Document> ldocument = ((List<Document>) ModelBean.GetContentTable("Document", "where isdeleted=0"));
    %>
    docs = [<% for (int id = 0; id < ldocument.size(); id++) { Document el = ldocument.get(id);%>"<%= el.getIdStandard() %>",<%}%>];





    $('#the-basics .typeahead').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(docs)
    });

    $('#the-basics .typeahead1').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(type)
    });
    $('#the-basics .typeahead2').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(product)
    });
    $('#the-basics .typeahead3').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(modeR)
    });
    $('#the-basics .typeahead4').typeahead({
        hint: true,
        highlight: true,
        minLength: 1
    }, {
        name: 'states',
        source: substringMatcher(modeL)
    });


    $("#typearticle").on("change paste keyup", function () {
        $.ajax({
            url: '/IMTRADE/Controle_saisie',
            method: "POST",
            data: {
                param: $(this).val(),
                article: "typearticle"
            },
            success: function (data) {
                var p = data.split("%%");
                if (p[0].length > 0) {
                    /*$("#productarticle").val("");
                     product = p;
                     $('#the-basics .typeahead2').typeahead({
                     hint: true,
                     highlight: true,
                     minLength: 1
                     }, {
                     name: 'states',
                     source: substringMatcher(product)
                     });*/
                }

            }
        });
    });

    $("#productarticle").bind("change paste keyup", function () {
        //if ($("#productarticle").val() != "") {
        $.ajax({
            url: '/IMTRADE/Controle_saisie',
            method: "POST",
            data: {
                param: $(this).val(),
                article: "productarticle"
            },
            success: function (data) {
                var res = data.split("%%");
                if (res[0].length > 0) {
                    $("#typearticle").val(res[0]);
                    $("#pricearticle").val(res[1]);
                    $("#qtyarticle").val(0);
                    $("#UM").val(res[2]);
                }


            }
        });
        //}

    });



</script>